#+TITLE: 有状态应用
#+DATE: 2023-09-28 15:23:55
#+DISPLAY: t
#+STARTUP: indent
#+OPTIONS: toc:10
#+AUTHOR: inmove
#+KEYWORDS: Kubernetes StatefulSet
#+CATEGORIES: Kubernetes

* 有状态应用
顾名思义，这是一种管理有状态集的资源。与Deployment生成的ReplicaSet不同的是，RS管理无状态的应用服务，SS则多用于管理数据库等有状态的服务。

其实StatefulSet用得相对比较少，基本都是用helm来管理 MongoDB等这种有状态服务。

主要特点：
1. 稳定且唯一的网络标识符：每个 Pod 都有一个稳定的主机名，如 mongodb-0、mongodb-1 等。
2. 持久化存储：可以与 Persistent Volumes 配合使用，以提供持久化存储。
3. 有序部署和扩展：Pods 是按顺序创建和终止的，这对于有状态应用（如数据库）非常重要。
4. 精细的更新控制：提供了多种更新策略，包括滚动更新和分区。

使用场景：
1. 数据库：如 MySQL、MongoDB、Cassandra 等。
2. 消息Queue：如 Kafka、RabbitMQ 等。
3. 其他有状态应用：任何需要持久化存储、稳定网络标识或有序部署的应用。
* 使用StatefulSet部署Redis
#+begin_src yaml
  apiVersion: storage.k8s.io/v1
  kind: StorageClass
  metadata:
    name: nfs-redis-ss-storage
  provisioner: k8s-sigs.io/nfs-subdir-external-provisioner
  parameters:
    server: 192.168.3.124
    path: /mnt/share
  ---
  apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    name: redis-ss
    namespace: redis
  spec:
    serviceName: "redis"
    replicas: 3
    selector:
      matchLabels:
        app: redis-ss
    template:
      metadata:
        labels:
          app: redis-ss
      spec:
        containers:
        - name: redis
          image: redis:latest
          ports:
          - containerPort: 6379
            name: redis
    volumeClaimTemplates:
    - metadata:
        name: redis-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: nfs-redis-ss-storage
        resources:
          requests:
            storage: 1Gi
#+end_src
