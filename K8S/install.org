#+TITLE: 安装Kubernetes
#+DATE: 2023-09-28 13:52:38
#+DISPLAY: t
#+STARTUP: indent
#+OPTIONS: toc:10
#+AUTHOR: inmove
#+KEYWORDS: Kubernetes
#+CATEGORIES: Kubernetes

* 版本要求
1. Ubuntu 22.04
2. K8S 1.26 ~ 1.28
* 服务器设置
** 设置静态IP
#+begin_src yaml
  # vim /etc/netplan/x.yaml
  # 静态IP: 192.168.0.130
  # 网关: 192.168.0.1
  network:
    version: 2
    ethernets:
      ens32:
        dhcp4: false
        addresses:
        - 192.168.0.130/24      # 改成你想要的IP
        gateway4: 192.168.0.1   # 修改网关
        nameservers:
          addresses:
          - 8.8.8.8
          - 114.114.114.114
#+end_src

#+begin_src shell
  nmcli dev show ens32  # 查看网关
  sudo netplan apply # 使静态ip生效
#+end_src
** 设置Ubuntu的清华源
https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu/
** 关闭selinux
#+begin_src shell
  sudo apt install selinux-utils
  sudo setenforce 0
  echo SELINUX=disabled >> /etc/selinux/config
#+end_src
** 关闭swap
#+begin_src shell
  sudo sed -i '/swapfile/s/^/#/' /etc/fstab
  sudo swapoff -a
#+end_src
** 修改其它设置
#+begin_src shell
  cat <<EOF > /etc/modules-load.d/containerd.conf
  overlay
  br_netfilter
  EOF

  sudo modprobe overlay
  sudo modprobe br_netfilter

  cat << EOF > /etc/sysctl.d/99-kubernetes-cri.conf
  net.bridge.bridge-nf-call-ip6tables = 1
  net.bridge.bridge-nf-call-iptables = 1
  net.ipv4.ip_forward = 1
  user.max_user_namespaces=28633
  EOF

  sudo sysctl -p /etc/sysctl.d/99-kubernetes-cri.conf

  mkdir -p /etc/sysconfig/modules/
  cat > /etc/sysconfig/modules/ipvs.modules <<EOF
  #!/bin/bash
  modprobe -- ip_vs
  modprobe -- ip_vs_rr
  modprobe -- ip_vs_wrr
  modprobe -- ip_vs_sh
  modprobe -- nf_conntrack
  EOF
  chmod 755 /etc/sysconfig/modules/ipvs.modules && bash /etc/sysconfig/modules/ipvs.modules && lsmod | grep -e ip_vs

  sudo apt install -y ipset ipvsadm
#+end_src
* 安装Containerd
#+begin_src shell
  sudo apt install -y containerd
  mkdir /etc/containerd
  sudo containerd config default > /etc/containerd/config.toml
  sudo sed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml
  sudo sed -i 's|sandbox_image = "registry.k8s.io/pause:3.8"|sandbox_image = "registry.aliyuncs.com/google_containers/pause:3.7"|g' /etc/containerd/config.toml
  sudo systemctl restart containerd
#+end_src
* 安装kubeadm
#+begin_src shell
  curl -s https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | sudo apt-key add -
  grep -q "kubernetes-xenial main" /etc/apt/sources.list || echo "deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main" >> /etc/apt/sources.list
  sudo apt-get update && sudo apt-get install -y kubernetes-cni apt-transport-https curl kubelet kubeadm kubectl --allow-unauthenticated
#+end_src
* 集群初始化
这一步只需要在Master上操作就可以了
#+begin_src shell
  # --pod-network-cidr=10.244.0.0/16 指定了一个 CIDR 范围，其中可以分配 65536 个 IP 地址（从 10.244.0.1 到 10.244.255.254）
  kubeadm init --image-repository registry.aliyuncs.com/google_containers --pod-network-cidr=10.244.0.0/16
#+end_src

初始化之后会得到如下的输出
#+begin_src shell
  # Your Kubernetes control-plane has initialized successfully!
  # To start using your cluster, you need to run the following as a regular user:

  # 下面的命令需要在master结点执行
  # mkdir -p $HOME/.kube
  # sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  # sudo chown $(id -u):$(id -g) $HOME/.kube/config

  # 也可以执行以下命令，或者将其添加到 ~/.bashrc文件中
  export KUBECONFIG=/etc/kubernetes/admin.conf
  # You should now deploy a pod network to the cluster.
  # Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  #  https://kubernetes.io/docs/concepts/cluster-administration/addons/
  # Then you can join any number of worker nodes by running the following on each as root:

  # 这一句需要在你的每台node结点执行一次
  kubeadm join 192.168.3.130:6443 --token s1hfjw.c2yweqxup3nsnqgv \
      --discovery-token-ca-cert-hash sha256:87c6595ce333ec26e2a1c06340d01a21aa794bf4ae9a73f47d2bbc6e2044e5f0
#+end_src
* 安装calico
#+begin_src shell
  wget https://docs.projectcalico.org/manifests/calico.yaml --no-check-certificate
  kubectl apply -f calico.yaml
#+end_src
* 配置容器镜像加速器
#+begin_src shell
  # 提示用户输入用户名和密码
  FLAG=`grep -q "registry.aliyuncs.com" /etc/containerd/config.toml`
  $FLAG || read -p "输入私有Harbor的用户名: " username
  $FLAG || read -sp "输入私有Harbor的密码: " password
  $FLAG

  $FLAG || sed -i '/\[plugins."io.containerd.grpc.v1.cri".registry.mirrors\]/a \
    [plugins."io.containerd.grpc.v1.cri".registry.mirrors."docker.io"] \
      endpoint = ["https://jtzbowem.mirror.aliyuncs.com"] \
    [plugins."io.containerd.grpc.v1.cri".registry.mirrors."k8s.gcr.io"] \
      endpoint = ["registry.aliyuncs.com/google_containers"] \
    [plugins."io.containerd.grpc.v1.cri".registry.mirrors."mh.com:8890"] \
      endpoint = ["http://mh.com:8890"] \
    [plugins."io.containerd.grpc.v1.cri".registry.configs."mh.com:8890".auth] \
      username = "'"$username"'" \
      password = "'"$password"'"' /etc/containerd/config.toml
  $FLAG || echo "192.168.3.124 mh.com" >> /etc/hosts
  sudo systemctl restart containerd
#+end_src
* 命令行alias
#+begin_src shell
  alias k='kubectl'
  alias ka='kubectl apply -f ' # 应用某个yaml
  alias kd='kubectl delete -f ' # 删除yaml
  alias ke='kubectl explain ' # 相关帮助
  alias kc='kubectl describe ' # 描述
#+end_src
