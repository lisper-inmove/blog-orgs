#+TITLE: Flexbox
#+DATE: 2024-02-20 08:30:35
#+DISPLAY: t
#+STARTUP: indent
#+OPTIONS: toc:10
#+AUTHOR: inmove
#+SUBTITLE: Officially known as the CSS Flexible Box Layout Module, is a powerful, efficient layout model designed to distribute space along a single column or row within a container.
#+KEYWORDS: Flexible Box Layout Module
#+CATEGORIES: CSS
#+CARDIMAGE: https://inmove-blog.oss-cn-hangzhou.aliyuncs.com/images/css-flex.png

* Key Concepts

1. *Flex Container*: if a container with =flex= or =inline-flex=, it is a flex container
2. *Flex items*: children of flex container called flex-items
3. *Main-Axis && Cros-Axis*: Every flex container has two Axis. One is Main, other is Cros. Depends on flex-direction
   1. if direction is row, Main-Axis is from _left_ to _right_. Cros-Axis is from _top_ to _bottom_.
   2. if direction is column, Main-Axis is from _top_ to _bottom_. Cros-Axis is from _left_ to _right_.

* justify-content && align-content && align-items && align-self
#+begin_src css
  .container {
      display: flex;
      flex-direction: row; /* row is default*/
      justify-content: space-evenly;
      align-content: flex-start;
      align-items: baseline;
  }
#+end_src

summary:
justify-content: control items arrangement in the *Main-Axis*
align-content: control items arrangement in the *Cros-Axis*
align-items: control items arrangement in the *Cros-Axis*

attentain:
1. if items are containers(has height and width) use align-content
2. if items are non-containers(no height and width) use align-items
3. *baseline* is special.

** justify-content
1. *flex-start*: from left to right or top to bottom depends on its direction.
2. *flex-end*: reverse of flex-start
3. *center*: center items along the main axis.
4. *space-between*: distributes items evenly; the first item is aligned with the start, the last item is aligned with the end
5. *space-around*: distributes items evenly with equal space around them. Each item has half-size spaces on either end
6. *space-evenly*: distributes items so that the space between any two items (and the space to the edges) is equal
** align-content
1. *stretch*: default. if we don't set height(or width) or set to auto. the Cros-Axis direction will be stretch
2. *flex-start*: refer to justify-content
3. *flex-end*
4. *center*
5. *space-around*
6. *space-evenly*
7. *space-between*
** align-items
1. *stretch*
2. *flex-start*
3. *flex-end*
4. *center*
5. *baseline*: Align by text baseline.

#+ATTR_HTML: :align start
#+begin_iframe
[[https://inmove.top/learning_react/flex-baseline][items-baseline]]
#+end_iframe


** align-self
This attribute set to one of the items. Just effect the item itself. Attribute values are same as align-items.

* flex-wrap
if container can't accommodate items in its *Main-Axis*, its default behavior is shrink items.
if set flex-wrap (default value is no-wrap) to wrap, items will set to next line.

* Flexible Sizing of Items

flex is a shortshand for this three attributes
flex: flex-grow flex-shrink flex-basis

** flex-grow: number
This property let the item grow or shrink to fill available space in the container.
If two items both have flex-grow to 1, they will share spare space 1:1
** flex-shrink: number
Speed of item shrink. if set to zero, item will refuse shrink
** flex-basis: number, percentage or 'auto' or 'content'
Max size. It will rewrite item size
If set to content, the item will ignore the width/height property.
When set to auto, its size is determined by width or height. If does not have width or height, its size will be determined by content size.

* order: number
The smaller, the item more in front. Default value is 0.
