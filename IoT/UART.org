#+TITLE: UART
#+DATE: 2025-01-24 17:42:34
#+DISPLAY: t
#+STARTUP: indent
#+OPTIONS: toc:10
#+AUTHOR: inmove
#+SUBTITLE: UART protocol
#+KEYWORDS: UART
#+CATEGORIES: IoT

* UART
*UART（Universal Asynchronous Receiver/Transmitter）*
是一种广泛使用的异步串行通信协议，通常用于计算机和外设之间的数据传输。它主要用于低速通信，适合点对点的通信，并且不需要时钟同步。UART通常在许多嵌入式设备、传感器、模块（如GPS、蓝牙、Wi-Fi模块）中被广泛使用。

* 基本原理
在UART通信中，数据通过两个信号线进行传输：
TX（Transmit）：数据发送线
RX（Receive）：数据接收线
通信过程中，数据是以位（bit）为单位在这些线之间异步传输的。每次发送一个字节，发送方会将其分割为多个比特，通过TX线按顺序发送，接收方会按照相同的顺序接收这些比特，并将其合并为一个字节。

* 主要特性
1. 异步通信：UART不使用同步时钟信号，而是通过约定好的波特率来确保发送方和接收方以相同的速率进行数据传输。
2. 数据帧：数据传输通常是以数据帧的形式进行，每个数据帧包括以下部分：
   2.1 起始位（Start bit）：标识数据帧的开始，通常为1个比特，表示从空闲状态（逻辑1）开始传输。
   2.2 数据位（Data bits）：数据本身，通常为5至9个比特（常见的是8个比特）。
   2.3 奇偶校验位（Parity bit）：可选，用于检测传输过程中是否发生了错误。奇偶校验可以设置为偶校验、奇校验或者不使用校验位。
   2.4 停止位（Stop bit）：标识数据帧的结束，通常为1至2个比特。停止位的电平通常为逻辑1（高电平）。
3. 波特率（Baud Rate）：波特率是数据传输速率的度量，通常以比特每秒（bps）表示。例如，9600波特率表示每秒传输9600比特。

* 的工作流程
发送端：发送数据时，发送端会先发送一个起始位，接着是数据位，然后根据配置的校验位（如果有）发送校验位，最后发送一个或多个停止位，表示数据帧的结束。
接收端：接收端通过RX线接收数据。在接收到起始位后，接收端开始按比特顺序接收数据，并在接收到完整的数据帧后，再通过停止位判断数据帧的结束。

* 通信的典型配置
波特率：如9600、19200、115200等
数据位：通常为8位
停止位：1位或2位
奇偶校验：可以选择“无校验（None）”、“偶校验（Even）”或“奇校验（Odd）”

* 协议商定
在UART通信中，数据的开始和结束是通过特定的起始位和停止位来判断的，整个过程不依赖时钟信号，因此是一种异步协议。通信双方需要预先商定一些基本的参数，包括波特率、数据位长度、停止位数量等。

1. 波特率（Baud Rate）：即数据传输的速度，单位为比特每秒（bps），如9600、115200等。
   波特率决定了每秒钟传输的比特数，发送方和接收方必须保持一致。如果波特率不一致，可能会导致数据丢失或误解。数据位长度（Data Bits）：决定每个数据帧包含多少个数据位。常见的长度是7位或8位，但某些应用可能会使用5位或6位。
2. 停止位数量（Stop Bits）：决定在每个数据帧结束时发送多少个停止位。常见的有1位或2位。
   如果停止位设置为2，则在数据帧之后会有2个比特的空闲时间，接收方会识别为两个逻辑1的电平。
3. 奇偶校验位（Parity Bit）（可选）：用于错误检测。
   3.1 可以设置为无校验、偶校验、奇校验等。
   3.2 如果启用了奇偶校验，发送端会根据数据位的数量来设置校验位（使得总数据位数为偶数或奇数），接收端会用来检测传输过程中是否发生了错误。
