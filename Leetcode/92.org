#+TITLE: 92. Reverse Linked List II
#+DATE: 2023-10-01 00:33:53
#+DISPLAY: t
#+STARTUP: indent
#+OPTIONS: toc:10
#+AUTHOR: inmove
#+KEYWORDS: LinkedList
#+CATEGORIES: Leetcode
#+DIFFICULTY: Medium
#+CARDIMAGE: https://inmove-blog.oss-cn-hangzhou.aliyuncs.com/images/linkedlist.png

* 题目解析

[[https://leetcode.cn/problems/reverse-linked-list-ii/description/?utm_source=LCUS&utm_medium=ip_redirect&utm_campaign=transfer2china][Leetcode 92]]
假设有链表为 a -> b -> c -> e
反转之后为:  e -> c -> b -> a
设置 dummy 为虚拟头结点，使其指向 a
返转之后返回 dummy->next即可

链表的反转的核心要点就是 *每次保存一个节点到临时变量中，指向它的指针就能断开*

* 解决方案
#+begin_src python
  from typing import Optional

  class ListNode:
      def __init__(self, val=0, next=None):
          self.val = val
          self.next = next

  class Solution:
      def reverseBetween(self, head: Optional[ListNode], left: int, right: int) -> Optional[ListNode]:
          dummy = ListNode()
          dummy.next = head
          prev = dummy
          for i in range(0, left - 1):
              prev = prev.next
          cur = prev.next
          for i in range(0, right - left):
              n = cur.next
              cur.next = n.next
              n.next = prev.next
              prev.next = n
          return dummy.next
#+end_src
