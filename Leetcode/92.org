#+TITLE: 92. 反转LinkedListII
#+DATE: 2023-10-01 00:33:53
#+DISPLAY: t
#+STARTUP: indent
#+OPTIONS: toc:10
#+AUTHOR: inmove
#+KEYWORDS: Leetcode LinkedList
#+CATEGORIES: Leetcode
#+DIFFICULTY: Medium

* Solution
#+begin_src python
  from typing import Optional

  class ListNode:
      def __init__(self, val=0, next=None):
          self.val = val
          self.next = next

  class Solution:
      def reverseBetween(self, head: Optional[ListNode], left: int, right: int) -> Optional[ListNode]:
          dummy = ListNode()
          dummy.next = head
          prev = dummy
          for i in range(0, left - 1):
              prev = prev.next
          cur = prev.next
          for i in range(0, right - left):
              n = cur.next
              cur.next = n.next
              n.next = prev.next
              prev.next = n
          return dummy.next
#+end_src
