#+TITLE: Study OrgMode
#+DATE: 2022-03-29 21:16:14
#+DISPLAY: nil
#+STARTUP: indent
#+OPTIONS: toc:10
#+AUTHOR: inmove
#+SUBTITLE: OrgMode common
#+KEYWORDS: Headlines TODO Date Tag Templates
#+CATEGORIES: OrgMode

* 标题
** 编辑大纲
1. C-c @(org-mark-substree): 选中当前大纲
2. C-c C-w(org-refile): 把当前这个大纲移动到另一个和父大纲同级的大纲下面
3. C-c C-x c(org-clone-substree-with-time-shift): 克隆当前大纲
4. C-c C-x C-w(org-cut-substree): 剪切当前大纲
5. C-c C-x C-y(org-paste-substree): 粘贴
6. C-c C-x M-w(org-copy-substree): 复制当前大纲
7. M-LEFT/RIGHT(org-do-promote/demote): 大纲级别提高/下降
8. M-S-LEFT/RIGHT(org-promote/demote-subtree): 大纲级别提高/下降,包括所有子大纲做相同的改变
9. M-UP/DOWN(org-move-subtree-up/down): 和上/下一个同一级别的大纲做交换
10. C-c ^(org-sort): 排序.对当前大纲的子大纲排序.如果有选中内容,则只对选中内容排序
11. C-x n s(org-narrow-to-subtree): narrow当前大纲
12. C-x n b(org-narrow-to-block): narrow当前block
13. C-x n w(widen): widen
14. C-c 星号: (org-toggle-heading): 把一个普通行或者item变成当前大纲的一个子大纲.相对也可以把一个大纲变成一个普通行.
** 列表
#+begin_verse
   [-,+]为无序列表
   [1. 1).]为有序列表
#+end_verse
** 移动
   1. C-c -: 在"+,-,1),1,*"之间遍历
** 抽屉(Drawers)
   1. C-c C-x d: 新建一个Drawer
   2. C-c C-z: 添加一个带时间戳的笔记到 drawer 'LOGBOOK'
** 标题之间移动
- C-c C-n (org-next-visible-heading): 下一个可见状态的headline
- C-c C-p (org-previous-visible-heading): 上一个可见状态的headline
- C-c C-f (org-forward-heading-same-level): 下一个同级headline
- C-c C-b (org-backward-heading-same-level): 上一个同级headline
- C-c C-u (outline-up-heading): 父headline
- C-c C-j (org-goto): 把所有entry都折叠起来,按下enter后跳转到那个headline上面.
* 待办记事
** 快捷键
1. C-c C-t: 切换到下一个关键字,只在同一组关键字切换
2. S-RIGHT/LEFT: 切换上一个下一个关键字,不管是不是同一个组,按顺序切换
** DELEGATED 关键字定义
   :PROPERTIES:
   :end:
#+begin_verse
1. 括号里面一个字母表示快捷键
2. @: 记录时间戳
3. !: 记录下一条笔记
#+end_verse

1. 全局设置
#+begin_src emacs-lisp :results silent
  (setq org-todo-keywords
       '((sequence "TODO(t)" "FEEDBACK(f@/!)" "VERIFY(v)" "|" "DONE(d!)" "DELEGATED(D@)")
         (sequence "ALICE(A)" "INMOVE(I)" "|" "MEI(M)")))
#+end_src
2. 单文件设置
#+begin_src org
  ,#+TODO: TODO FEEDBACK VERIFY | DONE(D@/!) CANCELED(C!)
  ,#+TOTO: INMOVE(I) | MEI(M@)
#+end_src
3. 单大纲设置
#+begin_verse
此设置只能设置关键字的 !,@ 等作用,并不能改变关键字集合
#+end_verse
#+begin_src org
  ,* TODO Log each state with only a time
    :PROPERTIES:
    :LOGGING: TODO WAIT DONE(@) CANCELED(!)
    :end:
  ,* Only log when switching to WAIT and when repeating
    :PROPERTIES:
    :LOGGING:  WAIT(@)
    :end:
  ,* No logging at all
    :PROPERTIES:
    :LOGGING:  nil
    :end:
#+end_src
** 其它设置
#+begin_verse
当待办记事由 未完成 转变成完成某一个状态时增加一个 closed 的时间戳
#+end_verse
#+begin_src emacs-lisp :results silent
  (setq org-log-done 'time)
#+end_src

#+begin_verse
当待办记事由 未完成 转变成完成时,增加一条笔记和时间戳
#+end_verse
#+begin_src emacs-lisp :results silent
  (setq org-log-done 'note)
#+end_src
** 优先级
*** 快捷键
1. S-UP/DOWN: 切换优先级
** 复选框
*** 快捷键
1. C-c C-c: 切换复选框的状态
* 标签                                                           :tag:agenda:
** 标签的继承
#+begin_verse
标签用于标记一个大纲.如果一个大纲被标记为标签A,那么它的所有子大纲都继承这个标签.
当变量 =org-use-tag-inheritance= 不为 nil 的时候,标签可被子大纲继承.这个变量也可以是列表,表示这些标签是可以被继承的.
变量 =org-tags-exclude-from-inheritance= 用于记录不能被继承的标签.且优先级高于 =org-use-tag-inheritance=
#+end_verse
** 如何设置标签
1. 在标题那一行使用 =C-c C-c=
2. 用 =#+FILETAGS: :tag0:tag1:= ,这样整个文件的所有大纲都继承这个标签
** 预定义标签
#+begin_verse
变量 =org-tag-alist= 用于保存预定义标签列表
也可以用 =#+TAGS= 在org文件中定义文件级别的预定义标签列表.并且此设置会覆盖 =org-tag-alist= 的设置
变量 =org-tag-persistent-alist= 的作用和 =org-tag-alist= 相同,但是它不会被 =#+TAGS= 覆盖
使用 =#+STARTUP: noptag= 来禁用 =org-tag-persistent-alist= 列表
#+end_verse
*** 预定义标签举例
#+begin_src emacs-lisp
  (setq org-tag-alist '(("@work" . ?w) ("@home" . ?h) ("laptop" . ?l)))
#+end_src
#+begin_src org
  ,#+TAGS: @work(w) @home(h) @tennisclub(t) laptop(l) pc(p)
#+end_src
** 标签分组
#+begin_verse
同一个组之间的标签是互斥的
#+end_verse
#+begin_verse
用 *startgroup* *endgroup* 来分组
#+end_verse
#+begin_src emacs-lisp
  (setq org-tag-alist '((:startgroup . nil)
                        ("@work" . ?w) ("@home" . ?h)
                        ("@tennisclub" . ?t)
                        (:endgroup . nil)
                        ("laptop" . ?l) ("pc" . ?p)))
#+end_src

#+begin_verse
用 *大括号* 来对标签分组,注意 大括号 与标签之间有空格.
#+end_verse
#+begin_src org
  ,#+TAGS: { @work(w) @home(h) } laptop(l) pc(p)
#+end_src
** 命名分组标签                                               :@work:laptop:
#+begin_verse
用 *:startgrouptag* *:grouptags* *:endgrouptag* 来创建全局命名分组标签
*:startgrouptag* *:endgrouptag* 可以用 *:startgroup* *:endgroup* 代替
#+end_verse
#+begin_src emacs-lisp
  (setq org-tag-alist '(
                        (:startgrouptag)
                        ("GTD")
                        (:grouptags) ("Control") ("Persp" . ?P) (:endgrouptag)

                        (:startgrouptag)
                        ("Control")
                        (:grouptags) ("Context") ("Task") (:endgrouptag)))
#+end_src
#+begin_verse
用 *中括号* 来对创建文件级命名分组标签
#+end_verse
#+begin_src org
  ,#+TAGS: [ GTD : Control Persp ]
  ,#+TAGS: [ Control : Context Task ]
  ,#+TAGS: [ Persp : Vision Goal AOF Project ]
#+end_src
* 属性
:PROPERTIES:
:COLUMNS:  %25ITEM %TAGS %PRIORITY %TODO
:end:
#+begin_verse
使用 =C-c C-x p= 来添加一个属性
#+end_verse
#+begin_src org
  ,* CD collection
  ,** Classic
    :PROPERTIES:
    :Genres: Classic
    :end:
  ,*** Goldberg Variations
      :PROPERTIES:
      :Title: Goldberg Variations
      :Composer: J.S. Bach
      :Artist: Glenn Gould
      :Publisher: Deutsche Grammophon
      :NDisks: 1
      :Genres+: Baroque
      :end:
#+end_src
** 用PROPERTY定义变量
:PROPERTIES:
:end:
#+begin_verse
一共有两种方式定义变量,举例如下
#+end_verse
#+begin_src org
  ,#+PROPERTY: header-args :var a=1
  ,#+PROPERTY: header-args+ :var b="2"
#+end_src
#+begin_src org
  ,* test
    :PROPERTIES:
    :header-args: :var a=1
    :header-args+: :var b="2"
    :end:
#+end_src
* 时间与日期
1. C-c . (org-time-stamp): 插入时间
   #+begin_verse
   此快捷键会进入到日历界面
   #+end_verse
   1. S-LEFT (org-timestamp-down-day): 后一天
   2. S-RIGHT (org-timestamp-up-day): 前一下
   3. S-UP (org-timestamp-up): 上一天
   4. S-DOWN (org-timestamp-down): 下一天
2. C-c ! (org-time-stamp-inactive): 插入不活跃的日期
3. C-c C-y (org-evaluate-time-range): 计算两个时间之间的时间差
** 期限
DEADLINE: <2021-06-15 Fri +3d>
1. C-c C-d: 插入deadline
   #+begin_verse
   插入的DEADLINE默认格式为 *2021-06-15 Fri*,修改为 *2021-06-15 +1d* 则变成了每天一次的重复任务
   #+end_verse
** 计划
SCHEDULED: <2021-06-15 Tue>
1. C-c C-s: 插入scheduled
* 捕获
#+begin_verse
捕获主要用于当我们有某种想法的时候,把想法直接写入到一个固定的文件,以供以后查看
#+end_verse

#+begin_verse
设置保存想法的文件
#+end_verse
#+begin_src emacs-lisp
  (setq org-default-notes-file (concat org-directory "/notes.org"))
#+end_src

1. org-capture: 捕获想法.打开预设的文件
* 富文本标记(Markup for Rich Contents)
** 举例
verse
#+begin_verse
  Great clouds overhead
  Tiny black birds rise and fall
  Snow covers Emacs

    ---AlexSchroeder
#+end_verse

CENTER
#+begin_CENTER
Everything should be made as simlpe as possible, \\
but not any simpler
#+end_CENTER

quote
#+begin_quote
Everything should be made as simple as possible, \\
but not any simpler --- Albert Einstein
#+end_quote
** 字的格式
*bold* /italic/ _underlined_ =verbatim= ~code~ +strike-through+
** 水平线
#+begin_verse
5+个 '-' 号会变成水平分割线
#+end_verse
* OPTIONS
1. TOC: table of contents的缩写,导出的文件是否包含目录.
  1. ^: 完整目录
  2. nil: 没有目录
  3. 数字: 只有前几级的标题成为目录
* STARTUP:
1. indent/noindent: 是否自动缩进
2. hidestars/showstarts: 是否使用精简模式
3. overview: 默认值,只显示最顶层标题
4. content: 显示所有标题
5. showall: 显示所有标题包括内容但是不显示drawer
6. showeverything: 显示所有内容包括drawer
7. hideblocks/nohideblocks: 显示隐藏代码代码块
* COMMENT preamble and postamble
#+begin_src emacs-lisp
  (setq org-html-preamble "Hello inmove")
#+end_src
* 结构模板
#+begin_src emacs-lisp
  (add-to-list 'org-structure-template-alist '("el" "#+begin_src emacs-lisp\n?\n#+end_src"))
  (add-to-list 'org-structure-template-alist '("sh" "#+begin_src sh\n?\n#+end_src"))
#+end_src

* 日程表文件                                                         :agenda:
#+begin_verse
变量 *org-agenda-files* 列出了被加入到日程表的所有org文件.如果有目录被加入,那么目录下的所有的 .org 文件全被加入到日程表中
#+end_verse
** 快捷键
1. C-c [(org-agenda-file-to-front): 添加当前文件到agenda列表
2. C-c ](org-remove-file): 把当前文件从agenda列表中移除
