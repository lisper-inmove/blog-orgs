#+TITLE: Insertion Sort
#+DATE: 2023-09-27 21:48:20
#+DISPLAY: t
#+STARTUP: indent
#+OPTIONS: toc:10
#+AUTHOR: inmove
#+KEYWORDS: Insertion Sort
#+CATEGORIES: Sort

* InsertionSort

Subarray from 0 to i is already sorted.
Then the the i + 1 element, find an element is smaller than i + 1 start from i to 0.
Best case, sorted already, move one step every time, total complexity is O(n)
Worst case, reverse sorted already, move to 0 every time, total complexity is O(n^2)

#+begin_src python
  def insertionSort(arr):
      n = len(arr)
      for i in range(1, n):
          key = arr[i]
          j = i - 1
          while j >= 0 and key < arr[j]:
              arr[j + 1] = arr[j]
              j -= 1
          arr[j + 1] = key
      return arr
#+end_src
