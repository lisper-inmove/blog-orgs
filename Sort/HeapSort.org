#+TITLE: Heap Sort
#+DATE: 2023-09-27 21:49:23
#+DISPLAY: nil
#+STARTUP: indent
#+OPTIONS: toc:10
#+AUTHOR: inmove
#+KEYWORDS: Heap Sort
#+CATEGORIES: Sort

* HeapSort

#+begin_src python
  def heapSort(arr):

      def heapify(arr, n, i):
          largest = i
          left = 2 * i + 1
          right = 2 * i + 2

          # If left child exists and its value is bigger than current
          if left < n and arr[i] < arr[left]:
              largest = left

          # If right child exists and its value is bigger current
          if right < n and arr[largest] < arr[right]:
              largest = right

          # If biggest is not current
          if largest != i:
              arr[i], arr[largest] = arr[largest], arr[i]
              # Reverse child
              heapify(arr, n, largest)

      n = len(arr)

      # Create a big-root heap
      for i in range(n // 2 - 1, -1, -1):
          heapify(arr, n, i)

      for i in range(n - 1, 0, -1):
          arr[i], arr[0] = arr[0], arr[i]
          heapify(arr, i, 0)

      return arr
#+end_src
