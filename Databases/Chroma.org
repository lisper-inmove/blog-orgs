#+TITLE: Chroma Database
#+DATE: 2025-04-19 11:35:33
#+DISPLAY: t
#+STARTUP: indent
#+OPTIONS: toc:10
#+AUTHOR: inmove
#+SUBTITLE: Usage of chroma Database
#+KEYWORDS: Embedding Vector
#+CATEGORIES: VectorDatabase

* Official Document
https://docs.trychroma.com/docs/overview/introduction

* Example
#+begin_src python
  import json
  import chromadb
  # setup Chroma in-memory, for easy prototyping. Can add persistence easily!
  client = chromadb.Client()

  # Create collection. get_collection, get_or_create_collection, delete_collection also available!
  collection = client.create_collection("all-my-documents")

  # Add docs to the collection. Can also update and delete. Row-based API coming soon!
  collection.add(
      documents=[
          "This is document1", "This is document2", "GLine", "GHI-LINE",
          "HI-LINE"
      ],  # we handle tokenization, embedding, and indexing automatically. You can skip that and add your own embeddings as well
      metadatas=[{
          "source": "notion"
      }, {
          "source": "google-docs"
      }, {
          "source": "gline"
      }, {
          "source": "ghi-line"
      }, {
          "source": "hi-line"
      }],  # filter on these!
      ids=["doc1", "doc2", "doc3", "doc4", "doc5"],  # unique for each doc
  )

  # Query/search 2 most similar results. You can also .get by id
  results = collection.query(
      query_texts=["GLine"],
      n_results=2,
      # where={"metadata_field": "is_equal_to_this"}, # optional filter
      # where_document={"$contains":"search_string"}  # optional filter
  )

  print(json.dumps(results, indent=4, sort_keys=True))
#+end_src

* Emphemeral Client
#+begin_verse
chromadb.Client() run a server in-memory and connect to it with the ephemeral client.
#+end_verse
#+begin_src python
  import chromadb

  client = chromadb.Client()
#+end_src

* Persistent Client
#+begin_verse
Data will be persisted automatically and loaded on start(if it exists).
client.reset() will empty an completely resets the database.
#+end_verse
#+begin_src python
  import chromadb

  client = chromadb.PersistentClient(path="chromadb.db")
  client.heartbeaet()
  client.reset()
#+end_src

* Server Mode
#+begin_src shell
  chroma run --path /db_path
#+end_src

#+begin_src python
  import chromadb

  chroma_client = chromadb.HttpClient(host='localhost', port=8000)

#+end_src

#+begin_src python
  import asyncio
  import chromadb

  async def main():
      client = await chromadb.AsyncHttpClient()

      collection = await client.create_collection(name="my_collection")
      await collection.add(
          documents=["hello world"],
          ids=["id1"]
      )

  asyncio.run(main())

#+end_src

* CRUD
https://docs.trychroma.com/docs/collections/create-get-delete
https://docs.trychroma.com/docs/querying-collections/query-and-get
