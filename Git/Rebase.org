#+TITLE: Rebase
#+DATE: 2024-03-29 21:32:43
#+DISPLAY: t
#+STARTUP: indent
#+OPTIONS: toc:10
#+AUTHOR: inmove
#+SUBTITLE: Rebase use case
#+KEYWORDS: Rebase
#+CATEGORIES: Git

* What is rebase
#+begin_verse
Rebase is a dangerous operation. Always remember the rule:
*Only rebase local changes, never rebase the commits which have push to remote.*
#+end_verse

** case1
#+begin_verse
  Among our development. We may produce some temporary commits, if we push those commits to remote, the branch will be confusion.
  We can merge those commits to a single one, then just push this commit to branch.
#+end_verse

1. =git checkout -b xxx-rebase=, create a temporary branch based on current branch.
2. Get SHA1 value of current branch
3. =git rebase -i SHA1-value=,
4. Preserve a pick, change others to 's'
5. Save
6. Rewrite commit comments.
7. Merge xxx-rebase to the branch you want to push.
8. Remove xxx-rebase

** case2

#+CAPTION: Rebase Case 2
#+ATTR_HTML: :justifyContent start :image t :width 600
[[https://inmove-blog.oss-cn-hangzhou.aliyuncs.com/images/rebase-case2.png][Rebase Case 2]]
Because of some situations we need to push C5 and C6 to master.

1. =git rebase --onto master A B= : Remove commits from B that exists in A but not exists in Master.
2. =git rebase -i master= Rebase to master.
3. =git merge B= Checkout to master and merge B.
